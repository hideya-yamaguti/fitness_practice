name: Check pull request

#on: push
on: pull_request

jobs:
  check:
    name: Check pull request

    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Restore gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Get gem info
        env:
          PACKAGES:
            danger:8.6.1
            danger-checkstyle_format:0.1.1
            danger-android_lint:0.0.10
            danger-junit:1.0.2
        id: gem-info
        run: |
          echo "::set-output name=dir::$(gem environment gemdir)"
          echo "::set-output name=packages::$PACKAGES"
          echo "::set-output name=key::$(echo $PACKAGES | tr ' ' '-')"
      - name: Restore gem cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.gem-info.outputs.dir }}
          key: ${{ runner.os }}-gem-${{ steps.gem-info.outputs.key }}











      #- name: Build with Gradle
      #  run: ./gradlew build
      - name: Lint
        run: ./gradlew lint
        continue-on-error: false
      - name: Spotless check
        run: ./gradlew spotlessApply
        continue-on-error: false

      - name: suggester / spotless
        uses: reviewdog/action-suggester@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tool_name: spotless

      - name: Unit test
        run: ./gradlew testDebugUnitTest

      - name: Danger
        if: cancelled() != true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JOB_STATUS: ${{ job.status }}
        run: |
          gem install ${{ steps.gem-info.outputs.packages }}
          danger --dangerfile='.github/workflows/check-pull-request.danger' --remove-previous-comments --fail-on-errors=true
